ll power(ll a, ll b, ll m)
{ ll rex = 1; 
    a = a % m;
    while (b > 0) {
        if (b & 1)
            rex = (rex * a) % m;
        b = b >> 1; 
        a = (a * a) % m;
    }
    return rex;
}
 
ll modInv(ll n, ll p)
{
    return power(n, p - 2, p);
}
ll mul(ll a,ll b,ll m)
{
    return a* 1ull * b % m;
}
ll div(ll a, ll b , ll m )
{
    return mul(a, modInv(b, m), m);
}

ll nCrm(ll n,ll r,ll p)
{
    
    if (n < r)
        return 0;
    
    if (r == 0)
        return 1;
    
    if (n - r < r)
        return nCrm(n, n - r, p);
ll res = 1;
    for (int i = r; i >= 1; i--)
        res = div(mul(res, n - i + 1, p), i, p);
    return res;
}
 

